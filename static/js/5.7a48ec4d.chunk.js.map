{"version":3,"sources":["Components/ColumnMiddle/StickerSet.js","Utils/Animatior.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerSet","nextProps","nextState","nextContext","_this$props","this","props","info","theme","_this$props2","classes","onSelect","onMouseDown","onMouseOver","title","items","stickers","map","x","i","react_default","a","createElement","className","classNames","stickerSetItem","key","sticker","id","data-sticker-id","onClick","Sticker","preview","displaySize","STICKER_SMALL_DISPLAY_SIZE","blur","React","Component","withStyles","backgroundColor","palette","background","paper","color","text","primary","width","height","padding","boxSizing","&:hover","type","borderRadius","withTheme","Animator","duration","_this","options","arguments","length","undefined","Object","classCallCheck","start","stopped","requestAnimationFrame","startAnim","timeStamp","end","draw","now","p","val","outSine","forEach","from","to","func","stop","cancelAnimationFrame","n","Math","sin","PI","StickersPickerHeader","possibleConstructorReturn","getPrototypeOf","call","onClientUpdateStickerSetPosition","update","position","setState","scrollToPosition","state","_assertThisInitialize","assertThisInitialized","animator","anchorRef","scroll","scrollRef","current","anchor","anchorNode","ReactDOM","scrollFrom","scrollLeft","scrollTo","anchorFrom","Number","style","left","replace","anchorTo","ANIMATION_DURATION_500MS","abs","sign","handleWheel","event","deltaX","deltaY","handleSelect","indexOf","createRef","StickerStore","on","removeListener","prevProps","prevState","snapshot","_this2","openMedia","borderColor","ref","onWheel","accentBackgroundDark","objectSpread","borderStyle","accentStyles","StickersPicker","scrollTop","loadContent","_ref","asyncToGenerator","regenerator_default","mark","_callee","stickerSets","sets","result","promises","slicedSets","headerStickers","wrap","_context","prev","next","abrupt","TdLibController","send","@type","is_masks","sent","push","set_id","Promise","all","slice","reduce","set","setsLength","_x","_x2","apply","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","inViewItems","item","itemsMap","get","node","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","loadStickerSetContent","updatePosition","minDiff","scrollHeight","firstOffsetTop","pos","element","diff","clientUpdate","handleScroll","_callee2","loadChunk","_this$state","concatSets","_context2","loadingChunk","finally","concat","loadPreviewContent","stickerId","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseOver","target","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","Date","timestamp","showPreview","cancelSend","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","handleSelectSet","_ref3","_callee3","_this$state2","_context3","_x3","Map","debounce","throttle","_this$state3","_this$state4","clear","Components_ColumnMiddle_StickerSet","el","Components_ColumnMiddle_StickersPickerHeader","onScroll","EmojiPickerButton","onClientUpdateChange","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","EMOJI_PICKER_TIMEOUT_MS","stickersPickerRef","reverse","loadStickerThumbnailContent","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","switchPicker","handleEmojiClick","tab","handleStickersClick","stickersPicker","handleStickerSend","handleStickerPreview","emojiPickerRef","ApplicationStore","LocalizationStore","t","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","dist_es","showSkinTones","dark","overflowX","Components_ColumnMiddle_StickersPicker","Fragment","rel","href","IconButton_default","iconButton","aria-label","onMouseEnter","onMouseLeave","InsertEmoticon_default","pickerRoot","defineProperty","pickerRootOpened","Button_default","headerButton","emoji-picker-content-stickers","StickerPreview","enhance","compose","margin","flex","zIndex","modal","shape","boxShadow","shadows","bottom","display","withTranslation"],"mappings":"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","file":"static/js/5.7a48ec4d.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary\n    },\n    stickerSetItem: {\n        width: STICKER_SMALL_DISPLAY_SIZE,\n        height: STICKER_SMALL_DISPLAY_SIZE,\n        padding: 3,\n        boxSizing: 'border-box',\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n            borderRadius: 6\n        }\n    }\n});\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info, theme } = this.props;\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes, info, onSelect, onMouseDown, onMouseOver } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseDown={onMouseDown}\n                onMouseOver={onMouseOver}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-item-sticker'\n                    sticker={x}\n                    preview\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(StickerSet);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, start, options } = this;\n\n        if (stopped) return;\n        if (now - start >= duration) this.stopped = true;\n\n        const p = (now - start) / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            func(from + (to - from) * val);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { ANIMATION_DURATION_500MS } from '../../Constants';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme),\n    ...accentStyles(theme)\n});\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { position: 0 };\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    onClientUpdateStickerSetPosition = update => {\n        const { position } = update;\n\n        this.setState({ position });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.position !== this.state.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.state;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        const scrollFrom = scroll.scrollLeft;\n        const scrollTo = position * 44 - 147;\n\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n        const anchorTo = position * 44;\n\n        if (animator) {\n            animator.stop();\n        }\n        this.animator = new Animator(ANIMATION_DURATION_500MS, [\n            {\n                from: scrollFrom,\n                to: scrollTo,\n                func: left => (scroll.scrollLeft = left)\n            },\n            {\n                from:\n                    Math.abs(anchorTo - anchorFrom) > 338\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\n                        : anchorFrom,\n                to: anchorTo,\n                func: left => (anchorNode.style.left = left + 'px')\n            }\n        ]);\n        this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft += event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { classes, stickers } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                preview\n                sticker={x}\n                displaySize={32}\n                blur={false}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className={classNames('stickers-picker-header', classes.borderColor)}>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>{items}</div>\n                    <div\n                        ref={this.anchorRef}\n                        className={classNames('stickers-picker-header-anchor', classes.accentBackgroundDark)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickersPickerHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (stickerSets, sets) => {\n        if (this.state.stickerSets) return;\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        }, []);\n        this.setState({\n            stickerSets,\n            sets: slicedSets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let firstOffsetTop = 0;\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n\n                    const offsetTop = node.offsetTop - firstOffsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSetPosition',\n            position\n        });\n        this.setState({ position });\n    };\n\n    handleScroll = async () => {\n        //this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n        this.setsLength += result.length;\n        let concatSets = sets.concat(result);\n        this.setState({ sets: concatSets });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { sets } = this.state;\n\n                    const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = async position => {\n        const { sets, stickerSets } = this.state;\n        const { scrollRef } = this;\n\n        if (position < sets.length) {\n            const element = this.itemsMap.get(sets[position].id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    const scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                }\n            }\n        } else if (position < stickerSets.sets.length) {\n            if (this.loadingChunk) return;\n            if (stickerSets.sets.length === sets.length) return;\n\n            this.loadingChunk = true;\n            const promises = [];\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n            this.setsLength += result.length;\n            let concatSets = sets.concat(result);\n            this.setState({ sets: concatSets }, () => {\n                if (position < concatSets.length) {\n                    this.handleSelectSet(position);\n                }\n            });\n        }\n    };\n\n    render() {\n        const { position, stickerSets, sets, headerStickers } = this.state;\n        if (!stickerSets) return null;\n\n        if (!sets) return null;\n        if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseOver={this.handleMouseOver}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker'>\n                <StickersPickerHeader onSelect={this.handleSelectSet} stickers={headerStickers} />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nexport default StickersPicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickerPreview from './StickerPreview';\nimport StickersPicker from './StickersPicker';\nimport { loadStickerThumbnailContent, loadStickerSetContent } from '../../Utils/File';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    },\n    pickerRoot: {\n        zIndex: theme.zIndex.modal,\n        width: 338,\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[8],\n        position: 'absolute',\n        bottom: 80,\n        display: 'none'\n    },\n    pickerRootOpened: {\n        display: 'block'\n    }\n});\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.emojiPickerRef = React.createRef();\n        this.stickersPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const node = this.stickersPickerRef.current;\n\n        const store = FileStore.getStore();\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n            node.loadedSets.set(x.id, x.id);\n        });\n\n        const previewStickers = this.sets.reduce((stickers, set) => {\n            if (set.stickers.length > 0) {\n                stickers.push(set.stickers[0]);\n            }\n            return stickers;\n        }, []);\n        previewStickers.forEach(x => {\n            loadStickerThumbnailContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        const { sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open });\n    };\n\n    switchPicker = () => {\n        this.updatePicker(!this.state.open);\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        const stickersPicker = this.stickersPickerRef.current;\n        const { tab } = this.state;\n\n        stickersPicker.loadContent(this.stickerSets, this.sets);\n\n        this.setState({ tab: 1 });\n        if (tab === 1) {\n            stickersPicker.scrollTop();\n        }\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { open, tab, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    ref={this.emojiPickerRef}\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onClick={this.switchPicker}\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}>\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleStickersClick}>\n                            {t('Stickers')}\n                        </Button>\n                    </div>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                    </div>\n                    <StickerPreview sticker={sticker} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}